{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Github-Training-Repository This repository is meant to be used to train new hires/volunteers on how to use Github. Preparation Material Please read/watch all those materials before you start the exercise. Getting started with anaconda and conda Good Research Code Handbook How to use Github with Github Desktop ALLFED Repository Template Readme Overview of Python Automated Testing The OpenAI Chat Bot is pretty good at answering programming questions Exercise Fork this repository Clone it to your local computer Recreate the folder structure as described in the ALLFED Guidelines Create a local virtual environment for the repository Create two files in the src folder: numerical.py and plotting.py Write a function in numerical.py that takes at least one argument and returns a numerical value Write a function in plotting.py that creates a scatter plot and uses the ALLFED Style Sheet Make your repository an installable package as described in Good Research Code Handbook Add a Jupyter Notebook in your scripts folder and import numerical.py and call it Write two tests for numerical.py Make sure that the documenation of all code follows the ALLFED Guidelines Automate the tests, so they run on every commit (you can just copy the files needed for that from the template Create an environment.yml that specifies how your virtual environment can be recreated and save it in the repository Send back a pull request Invite one of the data scientist (either florian@allfed.info or morgan@allfed.info) to review your pull request If you get stuck at any point please reach out to one of the data scientists (either florian@allfed.info or morgan@allfed.info).","title":"Github-Training-Repository"},{"location":"#github-training-repository","text":"This repository is meant to be used to train new hires/volunteers on how to use Github.","title":"Github-Training-Repository"},{"location":"#preparation-material","text":"Please read/watch all those materials before you start the exercise. Getting started with anaconda and conda Good Research Code Handbook How to use Github with Github Desktop ALLFED Repository Template Readme Overview of Python Automated Testing The OpenAI Chat Bot is pretty good at answering programming questions","title":"Preparation Material"},{"location":"#exercise","text":"Fork this repository Clone it to your local computer Recreate the folder structure as described in the ALLFED Guidelines Create a local virtual environment for the repository Create two files in the src folder: numerical.py and plotting.py Write a function in numerical.py that takes at least one argument and returns a numerical value Write a function in plotting.py that creates a scatter plot and uses the ALLFED Style Sheet Make your repository an installable package as described in Good Research Code Handbook Add a Jupyter Notebook in your scripts folder and import numerical.py and call it Write two tests for numerical.py Make sure that the documenation of all code follows the ALLFED Guidelines Automate the tests, so they run on every commit (you can just copy the files needed for that from the template Create an environment.yml that specifies how your virtual environment can be recreated and save it in the repository Send back a pull request Invite one of the data scientist (either florian@allfed.info or morgan@allfed.info) to review your pull request If you get stuck at any point please reach out to one of the data scientists (either florian@allfed.info or morgan@allfed.info).","title":"Exercise"},{"location":"modules/src/numerical/","text":"bumpy_reduction source .bumpy_reduction( x, recursions = 5 ) This function is a recursive function that does some whacky things that I can't explain Arguments x : input number recursions : must be a positive int, default is 5 if noit specified, is the number of times the function will recurse Returns function : if recursions is 0, returns x, otherwise returns bumpy_reduction(x/2 + recursions**2, recursions - 1)","title":"Numerical"},{"location":"modules/src/numerical/#_1","text":"","title":""},{"location":"modules/src/numerical/#bumpy_reduction","text":"source .bumpy_reduction( x, recursions = 5 ) This function is a recursive function that does some whacky things that I can't explain Arguments x : input number recursions : must be a positive int, default is 5 if noit specified, is the number of times the function will recurse Returns function : if recursions is 0, returns x, otherwise returns bumpy_reduction(x/2 + recursions**2, recursions - 1)","title":"bumpy_reduction"},{"location":"modules/src/plotting/","text":"plot_data source .plot_data( x, y, title, x_label, y_label ) Plots the results of the model Arguments x : x values to plot y : y values to plot title : title of the plot x_label : label for the x axis y_label : label for the y axis Returns None, but plots the results","title":"Plotting"},{"location":"modules/src/plotting/#_1","text":"","title":""},{"location":"modules/src/plotting/#plot_data","text":"source .plot_data( x, y, title, x_label, y_label ) Plots the results of the model Arguments x : x values to plot y : y values to plot title : title of the plot x_label : label for the x axis y_label : label for the y axis Returns None, but plots the results","title":"plot_data"}]}